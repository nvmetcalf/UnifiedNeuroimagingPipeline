#!/bin/csh
#$Header: /data/petsun4/data1/solaris/csh_scripts/RCS/run_dvar_4dfp,v 1.7 2009/11/24 22:29:27 avi Exp $
#$Log: run_dvar_4dfp,v $
# Revision 1.7  2009/11/24  22:29:27  avi
# compute x_ticks according to $nframe
#
# Revision 1.6  2009/09/22  23:08:39  avi
# isolate SunOS-dependent code
#
# Revision 1.5  2009/09/17  22:01:43  avi
# alter USAGE to reflect that input must be conc
#
# Revision 1.4  2009/08/21  01:37:25  avi
# eliminate apparent null-command (problem on SunOS only)
# automatically plot results (SunOS only)
#
# Revision 1.3  2009/08/14  06:47:52  avi
# auto-compute $CRIT
#
# Revision 1.2  2009/08/14  06:00:21  avi
# improve argument parsing
# force -s option to dvar_4dfp
# compute OR of conc2format and dvar_4dfp derived result in final output format
#
# Revision 1.1  2008/03/14  04:30:29  avi
# Initial revision
#
set rcsid = '$Id: run_dvar_4dfp,v 1.7 2009/11/24 22:29:27 avi Exp $'
echo $rcsid
set program = $0; set program = $program:t
#set echo
if (${#argv} < 1) goto USAGE

set CRIT = 0
@ debug = 0
@ verb = 0
@ k = 0
@ skip = 0
@ m = 1
set optstr = "-s"
while ($m <= ${#argv})
	set swi = `echo $argv[$m] | awk '{print substr($1,1,2)}'`
	set arg = `echo $argv[$m] | awk '{print substr($0,3)}'`
	switch ($swi)
	case -m*:
		set optstr = `echo $optstr $argv[$m] | awk '{print $0}'`; breaksw;
	case -n*:
		set optstr = `echo $optstr $argv[$m] | awk '{print $0}'`;
		@ skip = $arg;
		breaksw;
	case -t*:
		set optstr = `echo $optstr $argv[$m] | awk '{print $0}'`; breaksw;
	case -s*:
		set optstr = `echo $optstr $argv[$m] | awk '{print $0}'`; breaksw;
	case -d:
		@ debug++;				breaksw;
	case -v:
		@ verb++;				breaksw;
	case -p*:
		set printer = $arg;			breaksw;
	case -x*:
		set CRIT = $arg;			breaksw;
	case -*:
		echo option $argv[$m] not recognized; goto USAGE;
		breaksw;
	default:
		switch ($k)
		case 0:
			set file = $argv[$m];
			if ($file:e != "conc") goto USAGE
			@ k++; breaksw;
		default:
			breaksw;
		endsw
	endsw
	@ m++
end
if ($debug) then
	echo "optstr="$optstr
	echo "skip="$skip
endif
if (! $k) goto USAGE
if ($verb) set echo

if (! -e $file) then
	echo $program":	"$file not found
	exit -1
endif
awk '/file:/{l=index($1,":")+1; print substr($1,l)}' $file >! $$.lst
@ n = `cat $$.lst | wc -l`
set outroot = $file:r
set outroot = $outroot:t

if (-e $outroot.vals) /bin/rm $outroot.vals
touch $outroot.vals
@ k = 1
while ($k <= $n)
	set bold = `head -$k $$.lst | tail -1`
	if ($bold:e == "img")  set bold = $bold:r
	if ($bold:e == "4dfp") set bold = $bold:r
echo	dvar_4dfp $optstr $bold
	dvar_4dfp $optstr $bold
	awk '$1=="frame"{print $4}' $bold.ddat >> $outroot.vals
	@ k++
end
@ nframe = `wc $outroot.vals | awk '{print $1}'`

@ m = `cat $outroot.vals | wc -l`
if (-e $outroot.dat) /bin/rm $outroot.dat
touch $outroot.dat
@ k = 1
while ($k <= $m)
	echo $k `head -$k $outroot.vals | tail -1` >> $outroot.dat
	@ k++
end

set format0 = `conc2format $file $skip`
if ($status) exit $status
format2lst $format0 > $$.format0
##################################################################################
# if -x option not used compute criterion as mean steady-state frame vals + 4*s.d.
##################################################################################
if ($CRIT == 0) then
	set CRIT = `paste $outroot.vals $$.format0 | gawk '$2=="+"{s+=$1;v+=$1^2;n++};END{s/=n;v/=n;v-=s^2;print s+4.*sqrt(v)}'`
endif
echo "CRIT="$CRIT

######################################
# prepare files for automatic plotting
######################################
echo 0       $CRIT	>! $outroot.crit
echo $nframe $CRIT	>> $outroot.crit
#if (`uname -s` == "SunOS") then
	@ x_tick_minor = `echo $nframe | awk '{print int($1/65)}'`
	@ x_tick_major = 5 * $x_tick_minor
	echo "/%title/s/%title/"'"'$outroot.dat'"/'			>! $$.sed
	echo "/%x_tick_minor/s/%x_tick_minor/"$x_tick_minor"/"		>> $$.sed
	echo "/%x_tick_major/s/%x_tick_major/"$x_tick_major"/"		>> $$.sed
	echo "/%nframe/s/%nframe/"$nframe"/"				>> $$.sed
	sed -f $$.sed $PP_SCRIPTS/run_dvar_4dfp_prototype.xmgr >! $outroot.xmgr
	#xmgr -hardcopy -batch $outroot.xmgr -nxy $outroot.dat $outroot.crit -printfile $outroot.dat.ps -noask
	if (! ${?printer}) set printer = ""
	if ($printer != "") lp -d $printer $outroot.dat.ps
#endif

gawk '{c="+";if ($1 > crit)c="x"; printf ("%s\n",c)}' crit=$CRIT $outroot.vals > $$.format1
paste $$.format0 $$.format1 | awk '{if($1=="x")$2="x";printf("%s",$2)};END{printf("\n");}' > $$.format
condense -f$$.format >! $outroot.format
cat $outroot.format; echo

if (! $debug) /bin/rm $$*
exit

USAGE:
echo "Usage:	"$program" <(conc) concfile> [options]"
echo "	option"
echo "	-d	debug mode"
echo "	-v	verbose mode"
echo "	-p<str>	specify printer on which to plot results"
echo "	-x<flt>	set frame rejection threshold (default = mean + 4*s.d. over non-skipped frames)"
echo "N.B.:	"$program" is a wrapper for dvar_4dfp"
echo "N.B.:	options -m -n -t are passed to dvar_4dfp"
echo "N.B.:	option  -s is always passed to dvar_4dfp"
exit 1
