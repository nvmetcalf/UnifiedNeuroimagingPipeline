#!/bin/bash
#
# Script to generate time activity curves for arterial roi,
# halo roi, arterial+halo roi, for further analysis.
#
# Yi Su, 08/12/2013

datafn=$1
dataroot=${datafn%%.*}
TOFfn=$2
TOFname=`basename $TOFfn`
TOFdir=`dirname $TOFfn`
TOFroot=${TOFname%%.*}
mrfn=$3
mrname=`basename $mrfn`
mrdir=`dirname $mrfn`
mrroot=${mrname%%.*}



echo "TOF= "$TOFroot
echo "data = " $dataroot
echo "mrroot= " $mrroot

# segment TOF-MRA
emmraseg $TOFfn
emmraabseg $TOFfn

# gaussian blur arterial mask
fwhm=8.0
f_half=$(echo "scale=6; 4.412712/$fwhm" | bc)
gauss_4dfp TOF_ART $f_half TOF_ART_gECAT
gauss_4dfp TOF_AB $f_half TOF_AB_gECAT

# Register TOF to T1
reg2img $mrroot $TOFroot

# Find ART mask 
genericAIFFOVloc=/data/nil-bluearc/raichle/suy/BrainIF/NP872_EV
t4_inv ${mrroot}_to_711-2B_t4 -u
t4img_4dfp 711-2B_to_${mrroot}_t4 $genericAIFFOVloc/genericAIFROIatl AIFFOV -O$mrroot -n
maskimg_4dfp AIFFOV PETFOV AIFPETFOV

# get art roi tacs
#############################
# Determine frame separation scheme for the PIB data

t4img_4dfp ${TOFroot}_to_${mrroot}_t4 TOF_ART_gECAT TOF_ART_gECAT_on_MR -O${mrroot}
t4img_4dfp ${TOFroot}_to_${mrroot}_t4 TOF_AB_gECAT TOF_AB_gECAT_on_MR -O${mrroot}
t1=`findtroisize TOF_ART_gECAT_on_MR AIFPETFOV 16000`
t2=`findtroisize TOF_ART_gECAT_on_MR AIFPETFOV 8000`
echo $t1 $t2
maskimg_4dfp -t$t1 AIFPETFOV TOF_ART_gECAT_on_MR artm1
maskimg_4dfp -t$t2 AIFPETFOV TOF_ART_gECAT_on_MR artm2
imgopr_4dfp -sbartm1 artm1 artm2

a1ECAT=`qnt_4dfp TOF_ART_gECAT_on_MR artm1 | gawk '/Mean/ {print $2}'`
a2ECAT=`qnt_4dfp TOF_ART_gECAT_on_MR artm2 | gawk '/Mean/ {print $2}'`
a3ECAT=`qnt_4dfp TOF_ART_gECAT_on_MR bartm1 | gawk '/Mean/ {print $2}'`

b1ECAT=`qnt_4dfp TOF_AB_gECAT_on_MR artm1 | gawk '/Mean/ {print $2}'`
b2ECAT=`qnt_4dfp TOF_AB_gECAT_on_MR artm2 | gawk '/Mean/ {print $2}'`
b3ECAT=`qnt_4dfp TOF_AB_gECAT_on_MR bartm1 | gawk '/Mean/ {print $2}'`

if [ -e ${dataroot}_abECAT.txt ]
then
	rm  ${dataroot}_abECAT.txt
fi
touch ${dataroot}_abECAT.txt
printf "%16s%16s\n" Region RC >> ${dataroot}_abECAT.txt
printf "%16s%16f\n" ART1 $a1ECAT >> ${dataroot}_abECAT.txt
printf "%16s%16f\n" ART2 $a2ECAT >> ${dataroot}_abECAT.txt
printf "%16s%16f\n" BART1 $a3ECAT >> ${dataroot}_abECAT.txt

if [ -e ${dataroot}_bECAT.txt ]
then
	rm  ${dataroot}_bECAT.txt
fi
touch ${dataroot}_bECAT.txt
printf "%16s%16s\n" Region RC >> ${dataroot}_bECAT.txt
printf "%16s%16f\n" ART1 $b1ECAT >> ${dataroot}_bECAT.txt
printf "%16s%16f\n" ART2 $b2ECAT >> ${dataroot}_bECAT.txt
printf "%16s%16f\n" BART1 $b3ECAT >> ${dataroot}_bECAT.txt

if [ -e ${dataroot}_art1.tac ]
then
	rm ${dataroot}_art1.tac
fi
touch ${dataroot}_art1.tac
if [ -e ${dataroot}_art2.tac ]
then
	rm ${dataroot}_art2.tac
fi
touch ${dataroot}_art2.tac
if [ -e ${dataroot}_bart1.tac ]
then
	rm ${dataroot}_bart1.tac
fi
touch ${dataroot}_bart1.tac

source ${dataroot}.tb
frames=${lastframe[8]}
for (( f=1; f<=frames; f++ ))
do
	if [ $? -eq 0 ]
	then
		chop_4dfp $datafn $f $f -o${dataroot}"_"$f
		if (( $f < ${startframe[1]} )) 
		then
			t4file=${dataroot}"_a1_to_MR_t4"
		elif (( $f < ${startframe[2]} )) 
		then
			t4file=${dataroot}"_a2_to_MR_t4"
		elif (( $f < ${startframe[3]} )) 
		then
			t4file=${dataroot}"_a3_to_MR_t4"
		elif (( $f < ${startframe[4]} )) 
		then
			t4file=${dataroot}"_b1_to_MR_t4"
		elif (( $f < ${startframe[5]} )) 
		then
			t4file=${dataroot}"_b2_to_MR_t4"
		elif (( $f < ${startframe[6]} )) 
		then
			t4file=${dataroot}"_b3_to_MR_t4"
		elif (( $f < ${startframe[7]} )) 
		then
			t4file=${dataroot}"_c1_to_MR_t4"
		elif (( $f < ${startframe[8]} )) 
		then
			t4file=${dataroot}"_c2_to_MR_t4"
		else
			t4file=${dataroot}"_c3_to_MR_t4"
		fi
		t4img_4dfp $t4file ${dataroot}"_"$f PET_on_MR -O$mrroot
		qnt_4dfp PET_on_MR artm1 | gawk '/Mean/ {print $2}' >> ${dataroot}_art1.tac
		qnt_4dfp PET_on_MR artm2 | gawk '/Mean/ {print $2}' >> ${dataroot}_art2.tac
		qnt_4dfp PET_on_MR bartm1 | gawk '/Mean/ {print $2}' >> ${dataroot}_bart1.tac
		
		rm ${dataroot}"_"${f}.*
	fi
done

