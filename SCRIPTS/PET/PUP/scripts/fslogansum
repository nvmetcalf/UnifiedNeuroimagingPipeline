#!/bin/bash
################################################################################
# Summarize FreeSurfer Based PET loganREF ROI analysis			       #
#                                   				               #
# USAGE:								       #
#	fslogansum paramsfn postfix					       #
#									       #
# The output of this program is a text file that summarizes the modeling       #
# outputs								       #
################################################################################
# Yi Su, 01/08/2014

VERSION=1.1

if [ "$1" == "--version" ]; then
    echo $VERSION
    exit 0
fi

die(){
    echo >&2 "$@"
    exit -1
}

idstr='$Id: fslogansum,v '$VERSION' 2014/03/14 18:07:48 suy Exp $'

echo $idstr

program=`basename $0`

if [ $# -lt 2 ]
then
	echo "Usage: $program paramsfn postfix"
	exit -1
fi

paramsfn=$1
postfix=$2

###############################################################################
# Read PARAMS file
source $paramsfn || die "$program ERROR: Cannot source params file $paramsfn"

# Further development will improve this program to check the validity of
# the inputs specified in the params file

###############################################################################
# Process input
case "$postfix" in
     "none" )
	tacpostfix=".tac"
	loganpostfix=".mdl"
	sumpostfix=".txt"
	;;
     "_RSF" )
	tacpostfix="_RSF.tac"
	loganpostfix="_RSF.mdl"
	sumpostfix="_RSF.txt"
	;;
     "_PVC2C" )
	tacpostfix="_PVC2C.tac"
	loganpostfix="_PVC2C.mdl"
	sumpostfix="_PVC2C.txt"
	;;
     * )
	die "Unsupported postfix $postfix"
	;;
esac	

optfn=${petid}_LOGAN${sumpostfix}
optlrfn=${petid}_LOGANLR${sumpostfix}
###############################################################################
nline=`wc -l $roisfn | gawk '{print $1}'`

printf "%-35s %11s %11s %11s %11s\n" Structure_Name NVox BP R^2 Intc> $optfn
printf "%-35s %11s %11s %11s %11s\n" Structure_Name NVox BP R^2 Intc > $optlrfn

for (( i=1; i<=$nline; i++ ))
do
	ROI=`gawk 'NR=='$i' {print $1}'  $roisfn`
	flag=`gawk 'NR=='$i' {print $2}'  $roisfn`
	if (( $flag == 1 )) # ROIs with the naming convention Left/Right-${ROI}
	then
		lfn=${petid}_Left-${ROI}${loganpostfix}
		if [ -e $lfn ]
		then
			lnv=`gawk 'NR==3 {print $2}'  $lfn`
			lbp=`gawk 'NR==3 {print $3}'  $lfn`
			lrsq=`gawk 'NR==3 {print $4}'  $lfn`
			lintc=`gawk 'NR==3 {print $5}'  $lfn`
		else
			lnv=0
			lbp=0
			lrsq=0
			lintc=0
		fi
		printf "%-35s %11d %11.4f %11.7f %11.4f\n" Left-${ROI} $lnv $lbp $lrsq $lintc>> $optlrfn

		rfn=${petid}_Right-${ROI}${loganpostfix}
		if [ -e $rfn ]
		then
			rnv=`gawk 'NR==3 {print $2}'  $rfn`
			rbp=`gawk 'NR==3 {print $3}'  $rfn`
			rrsq=`gawk 'NR==3 {print $4}'  $rfn`
			rintc=`gawk 'NR==3 {print $5}'  $rfn`
		else
			rnv=0
			rbp=0
			rrsq=0
			rintc=0
		fi
		printf "%-35s %11d %11.4f %11.7f %11.4f\n" Right-${ROI} $rnv $rbp $rrsq $rintc>> $optlrfn
		if [ -e $rfn ]
		then
			# combine left and right ROI
			petmergeroi $petid Left-${ROI} Right-${ROI} $ROI $tacpostfix || die "petmergeroi $petid Left-${ROI} Right-${ROI} $ROI $tacpostfix failed"
		
			# calculating BP for combined ROI
			loganREFROI ${petid}_REF${tacpostfix} ${petid}_${ROI}${tacpostfix} ${ROI} $k2 $sf $ef ${petid}_${ROI}${loganpostfix} || die "loganREFROI ${petid}_REF${tacpostfix} ${petid}_${ROI}${tacpostfix} ${ROI} $k2 $sf $ef ${petid}_${ROI}${loganpostfix} failed"
			# output ROI values
			nv=`gawk 'NR==3 {print $2}'  ${petid}_${ROI}${loganpostfix}`
			bp=`gawk 'NR==3 {print $3}'  ${petid}_${ROI}${loganpostfix}`
			rsq=`gawk 'NR==3 {print $4}' ${petid}_${ROI}${loganpostfix}`
			intc=`gawk 'NR==3 {print $5}'  ${petid}_${ROI}${loganpostfix}`
		else
			nv=0
			bp=0
			rsq=0
			intc=0
		fi
		printf "%-35s %11d %11.4f %11.7f %11.4f\n" ${ROI} $nv $bp $rsq $intc >> $optfn

	elif (( $flag == 0 ))
	then
		fn=${petid}_${ROI}${loganpostfix}
		if [ -e $fn ]
		then
			nv=`gawk 'NR==3 {print $2}'  $fn`
			bp=`gawk 'NR==3 {print $3}'  $fn`
			rsq=`gawk 'NR==3 {print $4}'  $fn`
			intc=`gawk 'NR==3 {print $5}'  $fn`
		else
			nv=0
			bp=0
			rsq=0
			intc=0
		fi
		printf "%-35s %11d %11.4f %11.7f %11.4f\n" ${ROI} $nv $bp $rsq $intc >> $optfn
		printf "%-35s %11d %11.4f %11.7f %11.4f\n" ${ROI} $nv $bp $rsq $intc >> $optlrfn

	elif (( $flag == 2 ))
	then
		# Cortical Gray
		lfn=${petid}"_ctx-lh-"${ROI}${loganpostfix}
		if [ -e $lfn ]
		then
			lnv=`gawk 'NR==3 {print $2}'  $lfn`
			lbp=`gawk 'NR==3 {print $3}'  $lfn`
			lrsq=`gawk 'NR==3 {print $4}'  $lfn`
			lintc=`gawk 'NR==3 {print $5}'  $lfn`
		else
			lnv=0
			lbp=0
			lrsq=0
			lintc=0
		fi
		printf "%-35s %11d %11.4f %11.7f %11.4f\n" ctx-lh-${ROI} $lnv $lbp $lrsq $lintc>> $optlrfn

		rfn=${petid}"_ctx-rh-"${ROI}${loganpostfix}
		if [ -e $rfn ]
		then
			rnv=`gawk 'NR==3 {print $2}'  $rfn`
			rbp=`gawk 'NR==3 {print $3}'  $rfn`
			rrsq=`gawk 'NR==3 {print $4}'  $rfn`
			rintc=`gawk 'NR==3 {print $5}'  $rfn`
		else
			rnv=0
			rbp=0
			rrsq=0
			rintc=0
		fi
		printf "%-35s %11d %11.4f %11.7f %11.4f\n" ctx-rh-${ROI} $rnv $rbp $rrsq $rintc>> $optlrfn

		if [ -e $rfn ]
		then
			# combine left and right ROI
			petmergeroi $petid ctx-lh-${ROI} ctx-rh-${ROI} ctx-${ROI} $tacpostfix || die "petmergeroi $petid ctx-lh-${ROI} ctx-rh-${ROI} ctx-${ROI} $tacpostfix failed"
			# calculating BP for combined ROI
			loganREFROI ${petid}_REF${tacpostfix} ${petid}_ctx-${ROI}${tacpostfix} ctx-${ROI} $k2 $sf $ef ${petid}_ctx-${ROI}${loganpostfix} || die "loganREFROI ${petid}_REF${tacpostfix} ${petid}_ctx-${ROI}${tacpostfix} ctx-${ROI} $k2 $sf $ef ${petid}_ctx-${ROI}${loganpostfix} failed"
			# output ROI values
			nv=`gawk 'NR==3 {print $2}'  ${petid}_ctx-${ROI}${loganpostfix}`
			bp=`gawk 'NR==3 {print $3}'  ${petid}_ctx-${ROI}${loganpostfix}`
			rsq=`gawk 'NR==3 {print $4}' ${petid}_ctx-${ROI}${loganpostfix}`
			intc=`gawk 'NR==3 {print $5}'  ${petid}_ctx-${ROI}${loganpostfix}`
		else
			nv=0
			bp=0
			rsq=0
			intc=0
		fi
		printf "%-35s %11d %11.4f %11.7f %11.4f\n" ctx-${ROI} $nv $bp $rsq $intc >> $optfn

		# Cortical White
		lfn=${petid}"_wm-lh-"${ROI}${loganpostfix}
		if [ -e $lfn ]
		then
			lnv=`gawk 'NR==3 {print $2}'  $lfn`
			lbp=`gawk 'NR==3 {print $3}'  $lfn`
			lrsq=`gawk 'NR==3 {print $4}'  $lfn`
			lintc=`gawk 'NR==3 {print $5}'  $lfn`
		else
			lnv=0
			lbp=0
			lrsq=0
			lintc=0
		fi
		printf "%-35s %11d %11.4f %11.7f %11.4f\n" wm-lh-${ROI} $lnv $lbp $lrsq $lintc >> wmlr$$.txt

		rfn=${petid}"_wm-rh-"${ROI}${loganpostfix}
		if [ -e $rfn ]
		then
			rnv=`gawk 'NR==3 {print $2}'  $rfn`
			rbp=`gawk 'NR==3 {print $3}'  $rfn`
			rrsq=`gawk 'NR==3 {print $4}'  $rfn`
			rintc=`gawk 'NR==3 {print $5}'  $rfn`
		else
			rnv=0
			rbp=0
			rrsq=0
			rintc=0
		fi
		printf "%-35s %11d %11.4f %11.7f %11.4f\n" wm-rh-${ROI} $rnv $rbp $rrsq $rintc >> wmlr$$.txt

		if [ -e $rfn ]
		then
			# combine left and right ROI
			petmergeroi $petid wm-lh-${ROI} wm-rh-${ROI} wm-${ROI} $tacpostfix || die "petmergeroi $petid wm-lh-${ROI} wm-rh-${ROI} wm-${ROI} $tacpostfix failed"
			# calculating BP for combined ROI
			loganREFROI ${petid}_REF${tacpostfix} ${petid}_wm-${ROI}${tacpostfix} wm-${ROI} $k2 $sf $ef ${petid}_wm-${ROI}${loganpostfix}|| die "loganREFROI ${petid}_REF${tacpostfix} ${petid}_wm-${ROI}${tacpostfix} wm-${ROI} $k2 $sf $ef ${petid}_wm-${ROI}${loganpostfix} failed"
			# output ROI values
			nv=`gawk 'NR==3 {print $2}'  ${petid}_wm-${ROI}${loganpostfix}`
			bp=`gawk 'NR==3 {print $3}'  ${petid}_wm-${ROI}${loganpostfix}`
			rsq=`gawk 'NR==3 {print $4}' ${petid}_wm-${ROI}${loganpostfix}`
			intc=`gawk 'NR==3 {print $5}'  ${petid}_wm-${ROI}${loganpostfix}`
		else
			nv=0
			bp=0
			rsq=0
			intc=0
		fi
		printf "%-35s %11d %11.4f %11.7f %11.4f\n" wm-${ROI} $nv $bp $rsq $intc >> wm$$.txt
	fi
done
cat wm$$.txt >> $optfn
cat wmlr$$.txt >> $optlrfn
rm wm$$.txt
rm wmlr$$.txt


# Calculate MCBP

# GR
# combine ROIs
petmergeroi $petid ctx-lateralorbitofrontal ctx-medialorbitofrontal GR_FS $tacpostfix || die "petmergeroi $petid ctx-lateralorbitofrontal ctx-medialorbitofrontal GR_FS $tacpostfix failed"
# calculating BP for combined ROI
loganREFROI ${petid}_REF${tacpostfix} ${petid}_GR_FS${tacpostfix} GR_FS $k2 $sf $ef ${petid}_GR_FS${loganpostfix} || die "loganREFROI ${petid}_REF${tacpostfix} ${petid}_GR_FS${tacpostfix} GR_FS $k2 $sf $ef ${petid}_GR_FS${loganpostfix} failed"
# output ROI values
nv=`gawk 'NR==3 {print $2}'  ${petid}_GR_FS${loganpostfix}`
bp=`gawk 'NR==3 {print $3}'  ${petid}_GR_FS${loganpostfix}`
rsq=`gawk 'NR==3 {print $4}' ${petid}_GR_FS${loganpostfix}`
intc=`gawk 'NR==3 {print $5}'  ${petid}_GR_FS${loganpostfix}`
printf "%-35s %11d %11.4f %11.7f %11.4f\n" GR_FS $nv $bp $rsq $intc >> $optfn
N=$nv
MC=$bp


# TEMP
# combine ROIs
petmergeroi $petid ctx-middletemporal ctx-superiortemporal TEMP_FS $tacpostfix || die "petmergeroi $petid ctx-middletemporal ctx-superiortemporal TEMP_FS $tacpostfix failed"
# calculating BP for combined ROI
loganREFROI ${petid}_REF${tacpostfix} ${petid}_TEMP_FS${tacpostfix} TEMP_FS $k2 $sf $ef ${petid}_TEMP_FS${loganpostfix} || die "loganREFROI ${petid}_REF${tacpostfix} ${petid}_TEMP_FS${tacpostfix} TEMP_FS $k2 $sf $ef ${petid}_TEMP_FS${loganpostfix} failed"
# output ROI values
nv=`gawk 'NR==3 {print $2}'  ${petid}_TEMP_FS${loganpostfix}`
bp=`gawk 'NR==3 {print $3}'  ${petid}_TEMP_FS${loganpostfix}`
rsq=`gawk 'NR==3 {print $4}' ${petid}_TEMP_FS${loganpostfix}`
intc=`gawk 'NR==3 {print $5}'  ${petid}_TEMP_FS${loganpostfix}`
printf "%-35s %11d %11.4f %11.7f %11.4f\n" TEMP_FS $nv $bp $rsq $intc >> $optfn
MC=$(echo "scale=8; $bp+$MC" | bc)
N=$(echo "scale=8; $nv+$N" | bc)

# OCC
# combine ROIs
petmergeroi $petid ctx-cuneus ctx-lingual OCC_FS $tacpostfix || die "petmergeroi $petid ctx-cuneus ctx-lingual OCC_FS $tacpostfix failed"
# calculating BP for combined ROI
loganREFROI ${petid}_REF${tacpostfix} ${petid}_OCC_FS${tacpostfix} OCC_FS $k2 $sf $ef ${petid}_OCC_FS${loganpostfix} || die "loganREFROI ${petid}_REF${tacpostfix} ${petid}_OCC_FS${tacpostfix} OCC_FS $k2 $sf $ef ${petid}_OCC_FS${loganpostfix} failed"
# output ROI values
nv=`gawk 'NR==3 {print $2}'  ${petid}_OCC_FS${loganpostfix}`
bp=`gawk 'NR==3 {print $3}'  ${petid}_OCC_FS${loganpostfix}`
rsq=`gawk 'NR==3 {print $4}' ${petid}_OCC_FS${loganpostfix}`
intc=`gawk 'NR==3 {print $5}'  ${petid}_OCC_FS${loganpostfix}`
printf "%-35s %11d %11.4f %11.7f %11.4f\n" OCC_FS $nv $bp $rsq $intc >> $optfn

# PREF
# combine ROIs
petmergeroi $petid ctx-rostralmiddlefrontal ctx-superiorfrontal PREF_FS $tacpostfix || die "petmergeroi $petid ctx-rostralmiddlefrontal ctx-superiorfrontal PREF_FS $tacpostfix failed"
# calculating BP for combined ROI
loganREFROI ${petid}_REF${tacpostfix} ${petid}_PREF_FS${tacpostfix} PREF_FS $k2 $sf $ef ${petid}_PREF_FS${loganpostfix} || die "loganREFROI ${petid}_REF${tacpostfix} ${petid}_PREF_FS${tacpostfix} PREF_FS $k2 $sf $ef ${petid}_PREF_FS${loganpostfix} failed"
# output ROI values
nv=`gawk 'NR==3 {print $2}'  ${petid}_PREF_FS${loganpostfix}`
bp=`gawk 'NR==3 {print $3}'  ${petid}_PREF_FS${loganpostfix}`
rsq=`gawk 'NR==3 {print $4}' ${petid}_PREF_FS${loganpostfix}`
intc=`gawk 'NR==3 {print $5}'  ${petid}_PREF_FS${loganpostfix}`
printf "%-35s %11d %11.4f %11.7f %11.4f\n" PREF_FS $nv $bp $rsq $intc >> $optfn

MC=$(echo "scale=8; $bp+$MC" | bc)
N=$(echo "scale=8; $nv+$N" | bc)

# MC
nv=`gawk '/ctx-precuneus/ {print $2}' $optfn`
bp=`gawk '/ctx-precuneus/ {print $3}' $optfn`
MC=$(echo "scale=8; $bp+$MC" | bc)
N=$(echo "scale=8; $nv+$N" | bc)
MC=$(echo "scale=8; $MC/4" | bc)
printf "%-35s %11d %11.4f %11.7f %11.4f\n" MC $N $MC 0 0 >> $optfn


