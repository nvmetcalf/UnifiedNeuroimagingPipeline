#!/bin/bash
################################################################################
# PET roi tac extraction. This program generates ROI TAC curves for estimating #
# image-derived arterial input function (IDAIF)				       #
#                                   				               #
# USAGE:								       #
#	petarttac1 paramsfn                                                    #
#                                                                              #
# This script reads a params file that includes:                               #
#	petid:	petid is a string associated with the file name PET data in    #
#               4dfp format.						       #
#	pettomrt4: the t4 file that specifies the transformation from PET      #
#		   space to mr space                                           #
#									       #
#									       #
# The output of this program is a series of TAC curves			       #
################################################################################
# Yi Su, 3/4/2016
VERSION=1.0

if [ "$1" == "--version" ]; then
    echo $VERSION
    exit 0
fi

die(){
    echo >&2 "$@"
    exit -1
}

program=`basename $0`
idstr='$Id: '$program',v '$VERSION' Fri Mar 3 13:40:11 CST 2016 suy $'
echo $idstr

if [ $# -lt 1 ]
then
	echo "Usage: $program paramsfn"
	exit -1
fi

paramsfn=$1
###############################################################################
# Read PARAMS file
source $paramsfn
mgzto4dfp $wmparc
roiroot=${wmparc%.*}
roiimg=${roiroot}001

###############################################################################
# Prepare ROI TAC files for IDAIF estimation
if [ -e ${petid}_art0.tac ]
then
	rm ${petid}_art0.tac
fi
touch ${petid}_art0.tac
if [ -e ${petid}_art1.tac ]
then
	rm ${petid}_art1.tac
fi
touch ${petid}_art1.tac
if [ -e ${petid}_art2.tac ]
then
	rm ${petid}_art2.tac
fi
touch ${petid}_art2.tac
if [ -e ${petid}_bart1.tac ]
then
	rm ${petid}_bart1.tac
fi
touch ${petid}_bart1.tac
if [ -e ${petid}_bg1.tac ]
then
	rm ${petid}_bg1.tac
fi
touch ${petid}_bg1.tac
if [ -e ${petid}_WB.tac ]
then
	rm ${petid}_WB.tac
fi
touch ${petid}_WB.tac

###############################################################################
# Find whole brain mask

maskimg_4dfp  PETFOV ${roiimg} WBMask

###############################################################################
# Perform ROI analysis frame by frame
frames=`wc -l ${petid}_REF.tac | gawk '{print $1}'`

for (( f=1; f<frames; f++ ))
do
	chop_4dfp ${petid}_moco $f $f -o${petid}"_"$f || die "$program ERROR: chop_4dfp ${petid} $f $f -o${petid}_$f failed"
	t4img_4dfp $pettomrt4 ${petid}"_"$f ${petid}"_"$f"_on_roi" -O${roiimg} || die "$program ERROR: t4img_4dfp $pettomrt4 ${petid}_$f ${petid}_$f_on_roi -O${roiimg} failed"
	qnt_4dfp ${petid}"_"$f"_on_roi" artm1 | gawk '/Mean/ {print $2}' >> ${petid}_art1.tac
	qnt_4dfp ${petid}"_"$f"_on_roi" artm2 | gawk '/Mean/ {print $2}' >> ${petid}_art2.tac
	qnt_4dfp ${petid}"_"$f"_on_roi" bartm1 | gawk '/Mean/ {print $2}' >> ${petid}_bart1.tac
	qnt_4dfp ${petid}"_"$f"_on_roi" bg1 | gawk '/Mean/ {print $2}' >> ${petid}_bg1.tac
	qnt_4dfp ${petid}"_"$f"_on_roi" WBMask | gawk '/Mean/ {print $2}' >> ${petid}_WB.tac
	qnt_4dfp ${petid}"_"$f"_on_roi" artm0 | gawk '/Mean/ {print $2}' >> ${petid}_art0.tac
	rm ${petid}"_"${f}.*
	rm ${petid}"_"${f}_on_roi.*
done

###############################################################################
# Generate CALLg and CALLw TACs
petcombinetac ${petid} RSFlist.txt ctx CALLg .tac
petcombinetac ${petid} RSFlist.txt wm CALLw .tac

