#!/bin/bash
################################################################################
# Generate reference region roi TACs for FREESURFER based ROI analysis         #
#                                   				               #
# USAGE:								       #
#	fsrefroi petid roilist refroistr tacpostfix                            #
#	petid:	petid is a string associated with the file name PET data in    #
#               4dfp format.						       #
#	roilist:the text file that lists ROI names                             #
#	refroistr: string contained in ROI names used as Reference ROI	       #
#		   REF ROI could be a combined ROI from multiple ROIs defined  #
#		   in the roilist file					       #
#	tacpostfix: postfix for the tac file, standard postfix is ".tac", it   #
#		    could have extra strings, for example the postfix for an   #
#		    RSF corrected tac is "_RSF.tac". The TAC file for a        #
#		    specific ROI and dataset would follow the naming convention#
#		    ${petid}_${ROINAME}${tacpostfix}			       #
#									       #
# The output of this program is the reference ROI TAC file		       #
################################################################################
# Yi Su, 01/03/2014

VERSION=1.0

if [ "$1" == "--version" ]; then
    echo $VERSION
    exit 0
fi

die(){
    echo >&2 "$@"
    exit -1
}

program=`basename $0`
idstr='$Id: '$program',v '$VERSION' 2014/01/03 18:07:48 suy $'
echo $idstr

if [ $# -lt 4 ]
then
	echo "Usage: $program petid roilist refroistr tacpostfix"
	exit -1
fi

petid=$1
roilist=$2
refroistr=$3
tacpostfix=$4

###############################################################################
tacfn=${petid}_REF${tacpostfix}
gawk '/'$refroistr'/ {print $1}' $roilist > reflist.txt
nref=`wc -l reflist.txt | gawk '{print $1}'`
if (( $nref == 0 ))
then
	echo "ERROR: No REF ROI. Abort!"
	exit 4
elif (( $nref == 1 ))
then
	reflabel=`cat reflist.txt`
	cp ${petid}_${reflabel}${tacpostfix} ${tacfn}
elif (( $nref > 1 ))
then
	# Calculate total ROI size
	nvref=0
	for (( i=1; i<=$nref; i++ ))
	do
		label=`gawk 'NR=='$i' {print $1}' reflist.txt`
		nv=`gawk 'NR==1 {print $6}' ${petid}_${label}${tacpostfix}`
		(( nvref+=$nv ))
	done
	if (( $nvref == 0 ))
	then
		die "$program ERROR: REF NVoxels=0; must be > 0."
	fi
	printf "%9s %15s %15s %15s %15s %10d\n" "Frame_#" "Start_Time_(s)" "Duration_(s)"  "Mean" "NVoxels=" $nvref > ${tacfn}
	frames=`wc -l ${petid}_${label}${tacpostfix} | gawk '{print $1}'`

	for (( f=2; f<=$frames; f++ ))
	do
		meanv=0
		for (( i=1; i<=$nref; i++ ))
		do
			label=`gawk 'NR=='$i' {print $1}' reflist.txt`
			nv=`gawk 'NR==1 {print $6}' ${petid}_${label}${tacpostfix}`
			rv=`gawk 'NR=='$f' {print $4}' ${petid}_${label}${tacpostfix}`
			tmp=$meanv
			meanv=$(echo "scale=8; $tmp+$nv*$rv" | bc)
		done
		tmp=$meanv
		meanv=$(echo "scale=8; $tmp/$nvref" | bc)
		(( l=$f-1 ))
		ts=`gawk 'NR=='$f' {print $2}'  ${petid}_${label}${tacpostfix}`
		td=`gawk 'NR=='$f' {print $3}'  ${petid}_${label}${tacpostfix}`
		printf "%9d %15f %15f %15f\n" $l $ts $td $meanv >> $tacfn
	done
fi
exit 0
