#!/bin/csh -f
#$Header: /data/petsun4/data1/solaris/csh_scripts/RCS/cyno_mpr2atl_4dfp,v 1.5 2018/08/17 05:42:51 avi Exp $
#$Log: cyno_mpr2atl_4dfp,v $
# Revision 1.5  2018/08/17  05:42:51  avi
# invoke with -f
#
# Revision 1.4  2013/11/18  02:06:10  avi
# option redo
# increase number modes to 6
# run t4img_4dfp
#
# Revision 1.3  2013/09/07  23:58:51  avi
# option -T
#
# Revision 1.2  2012/02/02  02:34:59  avi
# option sphinx
#
# Revision 1.1  2011/11/09  01:15:48  avi
# Initial revision
#
set idstr = '$Id: cyno_mpr2atl_4dfp,v 1.5 2018/08/17 05:42:51 avi Exp $'
echo $idstr
set program = $0; set program = $program:t

@ debug		= 0
@ useold	= 0
@ redo		= 0
@ crossmodal	= 0
@ sphinx	= 0
set target	= /data/petsun59/data2/macaqueF6/macaqueF6
set refmsk	= /data/petsun59/data2/macaqueF6/macaqueF6_brain_g10z

@ m = 1
@ k = 0
while ($m <= ${#argv})
	switch ($argv[$m])
	case setecho:
		set echo;		breaksw;
	case crossmodal:
		@ crossmodal++;		breaksw;
	case sphinx:
		@ sphinx++;		breaksw;
	case redo:
		@ redo++;		breaksw;
	case debug:
		@ debug++;		breaksw;
	case useold:
		@ useold++;		breaksw;
	case -T*:
		set target = `echo $argv[$m] | awk '{print substr($1,3)}'`
		if ($target:e == "img")  set target = $target:r
		if ($target:e == "4dfp") set target = $target:r
					breaksw;
	default:
		set mpr = $argv[$m];	@ k++; breaksw;
	endsw
	@ m++
end
if ($k < 1) goto USAGE

set oristr	= (T C S)
set date0	= `date`
set usr		= `whoami`
echo "target="$target

if ($mpr:e == "img") set mpr = $mpr:r; if ($mpr:e == "4dfp") set mpr = $mpr:r
if ($mpr:r != $mpr) then
	foreach e (img img.rec ifh hdr)
		ln -s $mpr.4dfp.$e .
		if ($status) exit $status
	endif
	set mpr = $mpr:t
endif
if (! -e $mpr.4dfp.img || ! -e $mpr.4dfp.ifh) then
	echo $mpr not found 
	exit -1
endif
@ ori = `awk '/orientation/{print $NF - 1}' $mpr.4dfp.ifh`

set modes	= (0 0 0 0 0 0)
@ modes[1]	= 4096 + 256 + 3
@ modes[2]	= 3072 + 256 + 3
@ modes[3]	= 2048 + 256 + 3
@ modes[4]	= 2048 + 256 + 7
@ modes[5]	=  512 + 256 + 7
@ modes[6]	=  512 + 256 + 7
if ($crossmodal) then
	@ k = 1
	while ($k <= ${#modes})
		@ modes[$k] -= 256
	@ k++
	end
endif
set usemsk = ("none" "none" $refmsk $refmsk $refmsk $refmsk)

set t4file = $mpr"_to_"${target:t}_t4
if (! $useold || ! -e $t4file) then

set log = $mpr"_to_"${target:t}.log
if (! $redo) /bin/rm		$log
touch				$log
date >>				$log
echo $0 $argv[1-] >>		$log
echo $idstr >>			$log

if ($sphinx) then
	echo	t4_mul	$RELEASE/$oristr[$ori]_t4	$RELEASE/sphinx_to_transverse_t4	$t4file
		t4_mul	$RELEASE/$oristr[$ori]_t4	$RELEASE/sphinx_to_transverse_t4	$t4file
else if (! $redo) then
	echo	/bin/cp $RELEASE/$oristr[$ori]_t4						$t4file
		/bin/cp $RELEASE/$oristr[$ori]_t4						$t4file
endif
cat $t4file
	if ($status) exit $status
	chmod 664										$t4file
	if ($redo) then
		@ k = 4
	else
		@ k = 1
	endif
	while ($k <= ${#modes})
		if ($debug) then
			imgreg_4dfp $target $usemsk[$k] $mpr none $t4file $modes[$k]
			if ($status) goto ERR;
		else
			imgreg_4dfp $target $usemsk[$k] $mpr none $t4file $modes[$k] >> $log
			if ($status) goto ERR;
		endif
		@ k++
	end
endif

echo "start time "$date0
echo "end   time "`date`

t4img_4dfp $t4file $mpr	${mpr}_on_${target:t} -O$target
if ($status) exit $status
ifh2hdr -r750		${mpr}_on_${target:t}
if ($status) exit $status
exit 0

ERR:
if ($debug) then
	echo $program": execution aborted due to procedural/write error"
else
	echo $program": execution aborted due to procedural/write error" >> $log
endif
exit -1

USAGE:
echo "Usage:	"$program" <mpr_anat>"
echo "e.g.,	"$program" davy_100401_mpr1[.4dfp.img]"
echo "	options"
echo "	-T<str>	specify non-default atlas representative target (default = /data/petsun59/data2/macaqueF6/macaqueF6)"
echo "	crossmodal	use cross-modal mpr->target registration"
echo "	sphinx		initialize transform assuming imaging in sphinx position"
echo "	useold		suppress recomputation of existing t4 file"
echo "	redo		suppress t4 file initialization"
echo "	setecho		set echo"
exit 1
