#!/bin/csh -f
#$Header: /data/petsun4/data1/solaris/csh_scripts/RCS/cyno_cross_DWI_imgreg_4dfp,v 1.3 2018/08/17 05:38:52 avi Exp $
#$Log: cyno_cross_DWI_imgreg_4dfp,v $
# Revision 1.3  2018/08/17  05:38:52  avi
# invoke with -f
#
# Revision 1.2  2013/09/08  02:40:25  avi
# option -T
#
# Revision 1.1  2013/09/03  22:24:11  avi
# Initial revision
#
set rcsid = '$Id: cyno_cross_DWI_imgreg_4dfp,v 1.3 2018/08/17 05:38:52 avi Exp $'
echo $rcsid
set program = $0; set program = $program:t

set target	= /data/petsun59/data2/macaqueF6/macaqueF6
@ debug	= 0
@ k = 0
@ m  = 1
while ($m <= ${#argv})
	switch ($argv[$m])
	case setecho:
		set echo;	breaksw;
	case debug:
		@ debug++;	breaksw;
	case -T*:
		set target = `echo $argv[$m] | awk '{print substr($1,3)}'`
		if ($target:e == "img")  set target = $target:r
		if ($target:e == "4dfp") set target = $target:r
				breaksw;
	default:
		switch ($k)
		case 0:
			set day2 = $argv[$m]; if ($day2:e == "img") set day2 = $day2:r; if ($day2:e == "4dfp") set day2 = $day2:r;
			@ k++; breaksw;
		case 1:
			set day1_dwi_path = $argv[$m];
			@ k++; breaksw;
		case 2:
			set day1 = $argv[$m]; if ($day1:e == "img") set day1 = $day1:r; if ($day1:e == "4dfp") set day1 = $day1:r;
			@ k++; breaksw;
		default:
			breaksw;
		endsw
	endsw
	@ m++
end
if ($k < 3) goto USAGE
echo "atlas representative target="$target

##############################
# make day1 data tailored mask
##############################
pushd $day1_dwi_path			# into $day1_dwi_path
cyno_msktgen_4dfp $day1 100 -T$target
if ($status) exit $status
endif
popd					# out of $day1_dwi_path

####################
# initialize $t4file
####################
set log		= $day2"_to_"$day1.log
set t4file	= $day2"_to_"$day1"_t4"
set oristr	= (T C S)
@ ori = `awk '/orientation/{print $NF - 1}' $day1_dwi_path/$day1.4dfp.ifh`
t4_inv $RELEASE/$oristr[$ori]_t4 temp$$_t4
@ ori = `awk '/orientation/{print $NF - 1}' $day2.4dfp.ifh`
t4_mul $RELEASE/$oristr[$ori]_t4 temp$$_t4 $t4file
/bin/rm temp$$_t4

#####################################
# compute cross-day dwi to dwi t4file
#####################################
echo $program $argv[1-]	>! $log
date			>> $log
echo $rcsid		>> $log
set modes	= (1 2 3 4 5 6)
@ modes[1]	= 4096 + 3 + 256
@ modes[2]	= $modes[1]
@ modes[3]	= 2048 + 3 + 256
@ modes[4]	=  512 + 3 + 256
@ modes[5]	= $modes[4] + 4
@ modes[6]	= $modes[5] + 8192
@ k = 1
while ($k <= ${#modes})
echo	imgreg_4dfp $day1_dwi_path/$day1 $day1_dwi_path/$day1"_mskt" $day2 none $t4file $modes[$k] >> $log
	imgreg_4dfp $day1_dwi_path/$day1 $day1_dwi_path/$day1"_mskt" $day2 none $t4file $modes[$k] >> $log
	if ($status) exit $status
	@ k++
end

####################
# compose transforms
####################
set cur	= `date +"%m%d%y_%H%M"`
if (-e $day2"_to_"${target:t}"_t4") /bin/mv			$day2"_to_"${target:t}"_t4" $day2"_to_"${target:t}"_t4_"$cur
t4_mul $t4file $day1_dwi_path/$day1"_to_"${target:t}"_t4"	$day2"_to_"${target:t}"_t4"

#####################
# apply new transform
#####################
extract_frame_4dfp $day2 1
if ($status) exit $status
t4img_4dfp $t4file ${day2}_frame1	${day2}_frame1_on_$day1 -O$day1_dwi_path/$day1
if ($status) exit $status
ifh2hdr -r500				${day2}_frame1_on_$day1

exit 0

USAGE:
echo "Usage:	"$program" <curr_dwi> <day1_dwi_path> <day1_dwi> [options]"
echo " e.g.:	"$program" tosh_100817_dwi1 /data/jsp/primate/mri/tosh/tosh_pre/DWI tosh_110413_dwi1"
echo "	options"
echo "	-T<str>	specify non-default atlas-representative target (default = /data/petsun59/data2/macaqueF6/macaqueF6)"
echo "N.B.:	"$program" must be run in the current DWI directory"
exit 1
