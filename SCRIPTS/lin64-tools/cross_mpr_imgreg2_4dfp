#!/bin/csh -f
#$Header: /data/petsun4/data1/solaris/csh_scripts/RCS/cross_mpr_imgreg2_4dfp,v 1.2 2018/08/17 05:37:14 avi Exp $
#$Log: cross_mpr_imgreg2_4dfp,v $
# Revision 1.2  2018/08/17  05:37:14  avi
# invoke with -f
#
# Revision 1.1  2011/09/02  04:05:51  avi
# Initial revision
#
set rcsid	= '$Id: cross_mpr_imgreg2_4dfp,v 1.2 2018/08/17 05:37:14 avi Exp $'
set program	= $0; set program = $program:t

if (${#argv} < 3) then
	echo "Usage:	"$program" <session1_path> <session1_mpr> <session2_path> <session2_mpr> <target>"
	echo " e.g.:	"$program mm01-004_p6995_2008feb13/Trio/atlas mm01-004_p6995_mpr mm01-004_p7257_2008jun4/Trio/atlas mm01-004_p7257_mpr -T$REFDIR/711-2Y
	echo "N.B.:	<target> may be of the form '711-2[B-Z]' OR '-Tmypath/mytarget'"
	echo "N.B.:	specified paths must be absolute (not as in Usage)"
	exit 1
endif

set dirs	= ($1 $3)
set mprs	= ($2 $4)
switch ($argv[5])
	case 711-2?:
		set targetpath	 = $REFDIR/$argv[5]; breaksw;
	case -T*:
		set targetpath	 = $argv[5]; breaksw;
endsw
set target = $targetpath:t
if ($target:e == "img")  set target = $target:r
if ($target:e == "4dfp") set target = $target:r

@ debug = 0
@ m  = 6
while ($m <= ${#argv})
	switch ($argv[$m])
	case setecho:
		set echo;		breaksw;
	case debug:
		@ debug++;		breaksw;
		breaksw;
	endsw
	@ m++
end

set modes	= (0 0 0 0 0)
@ modes[1]	= 4096 + 256 + 3 
@ modes[2]	= 1024 + 256 + 3 
@ modes[3]	= 2048 + 256 + 3
@ modes[4]	= 2048 + 256 + 3 + 8
@ modes[5]	= 2048 + 256 + 3 + 8 + 8192

echo "dirs"=$dirs
echo "mprs"=$mprs
echo "targetpath="$targetpath
echo "target="$target

#################
# check existence
#################
set mpr = (0 0)
@ k = 1
while ($k <= 2)
	if (! -d $dirs[$k]) then
		echo $dirs[$k] not a directory
		exit -1
	endif
	pushd $dirs[$k]
	set mpr[$k] = $mprs[$k]
	if ($mpr[$k]:e == "img")  set mpr[$k] = $mpr[$k]:r
	if ($mpr[$k]:e == "4dfp") set mpr[$k] = $mpr[$k]:r
	if (! -e $mpr[$k].4dfp.img || ! -e $mpr[$k].4dfp.ifh) then
		$mpr[$k] not found
		exit -1
	endif
	popd
	@ k++
end

########################################################
# check for existence of session1 atlas transform t4file
########################################################
pushd $dirs[1]			# into session 1 directory
if (! -e $mpr[1]_to_$target"_t4") then
	echo $mpr[1]_to_$target"_t4" not found
	exit -1
endif
msktgen_4dfp $mpr[1] -T$targetpath
if ($status) exit $status
popd				# out of session 1 directory

####################################
# compute cross-session registration
####################################
pushd $dirs[2]			# into session 2 directory
set t4file	= $mpr[2]_to_$mpr[1]_t4
set log		= $mpr[2]_to_$mpr[1].log
date						>! $log
echo $rcsid					>> $log
echo $program $argv[1-]				>> $log
@ j = 1
while ($j <= ${#modes})
	echo	imgreg_4dfp $dirs[1]/$mpr[1] $dirs[1]/$mpr[1]"_mskt" $mpr[2] none $t4file $modes[$j]
	echo	imgreg_4dfp $dirs[1]/$mpr[1] $dirs[1]/$mpr[1]"_mskt" $mpr[2] none $t4file $modes[$j] >> $log
		imgreg_4dfp $dirs[1]/$mpr[1] $dirs[1]/$mpr[1]"_mskt" $mpr[2] none $t4file $modes[$j] >> $log
	if ($status) exit $status
	@ j++
end
#######################################
# combine transforms for second session
#######################################
t4_mul $t4file $dirs[1]/$mpr[1]_to_${target}_t4 $mpr[2]_to_${target}_t4
if ($status) exit $status

########################################
# create atlas space second session mprs
########################################
foreach O (111 222 333)
	t4img_4dfp $mpr[2]_to_${target}_t4 $mpr[2]	$mpr[2]_on_${target}_$O -O$O
	if ($status) exit $status
	ifh2hdr -r1600					$mpr[2]_on_${target}_$O
end
popd				# out of session 2 directory

exit
