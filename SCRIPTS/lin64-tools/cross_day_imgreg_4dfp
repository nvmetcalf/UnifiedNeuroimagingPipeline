#!/bin/csh -f
#$Header: /data/petsun4/data1/solaris/csh_scripts/RCS/cross_day_imgreg_4dfp,v 1.11 2018/08/17 05:37:03 avi Exp $
#$Log: cross_day_imgreg_4dfp,v $
# Revision 1.11  2018/08/17  05:37:03  avi
# invoke with -f
#
# Revision 1.10  2010/09/20  02:30:41  avi
# option -a
#
# Revision 1.9  2010/09/16  00:44:54  avi
# option -nostretch
#
# Revision 1.8  2010/07/27  02:03:08  avi
# several safety checks for prerequisites
#
# Revision 1.7  2008/01/24  22:04:35  avi
# option -flipx
#
# Revision 1.6  2007/09/26  03:42:17  avi
# 4 required parameter version; arbitrary atlas targets enabled
#
# Revision 1.5  2006/03/30  23:41:58  avi
# handle differently oriented BOLD acquisitions
#
# Revision 1.4  2005/09/30  01:11:10  avi
# generalize $target possibilities
#
# Revision 1.3  2004/01/07  04:06:34  avi
# generalize from atlas target 711-2B to 711-2[BCYOKL]
#
# Revision 1.2  2003/11/08  02:09:29  avi
# rename old anat_ave_to_711-2B_t4 only if it exists
#
# Revision 1.1  2003/11/08  02:06:23  avi
# Initial revision
#
set rcsid = '$Id: cross_day_imgreg_4dfp,v 1.11 2018/08/17 05:37:03 avi Exp $'
echo $rcsid
set program = $0; set program = $program:t
if (${#argv} < 4) then
	echo "Usage:	"$program" <curr_patid> <day1_atlas_path> <day1_patid> <atlas_representative_target> [options]"
	echo "e.g.:	"$program" tpj0202 /data/petsun24/data1/tpj0201/atlas tpj0201 711-2Y"
	echo "e.g.:	"$program" tpj0202 /data/petsun24/data1/tpj0201/atlas tpj0201 -T/data/cninds01/data2/ATLAS/ALLEGRA_Y_111"
	echo "N.B.:	"$program" must be run in the current atlas directory"
	echo "N.B.:	<atlas_representative_target> may be of form 711-2? OR -T/path/image"
	echo "	option"
	echo "	-a<str>	specify image filename trailer (default = "\"anat_ave\"")"
	echo "	-nostretch	disable stretch in transform"
	echo "	-setecho	set echo"
	echo "	-S<str>	specify atlas space (default=711-2B)"
	exit 1
endif

#set echo

@ hasTarget	= 0
@ debug		= 0
set trailer	= "anat_ave"
set patid	= $1
set day1path	= $2
set day1patid	= $3
set targetpath	= $4;
switch ($targetpath)
	case -T*:
		set target = `echo $targetpath | awk '{print substr($1,3)}'`
		set target = $target:t
		@ hasTarget++
		breaksw;
	default:
		set target = $targetpath
		breaksw;
endsw
set modes	= (1 2 3 4 5 6)
@ modes[1]	= 4096 + 3 + 256
@ modes[2]	= 4096 + 3 + 256
@ modes[3]	= 3072 + 3 + 256
@ modes[4]	= 2048 + 3 + 256
@ modes[5]	= $modes[4] + 4
@ modes[6]	= $modes[5] + 8192

set atlas	= 711-2B	# default atlas space
@ m = 5
while ($m <= ${#argv})
	switch ($argv[$m])
	case -a*:
		set trailer = `echo $argv[$m] | awk '{print substr($1,3)}'`
		breaksw;
	case -nostretch:
		echo nostretch enabled
		@ modes[5] = $modes[4]
		@ modes[6] = $modes[5] + 8192
		breaksw;
	case -S*:
		set atlas = `echo $argv[$m] | awk '{print substr($1,3)}'`
		breaksw;
	case setecho:
		set echo;		breaksw;
	case debug:
		@ debug++;		breaksw;
	default:
		echo option not recognized
		exit -1;
		breaksw;
	endsw
	@ m++
end

set day2	= $patid"_"$trailer
set day1	= $day1patid"_"$trailer
set log		= $day2"_to_"$day1.log
set t4file	= $day2"_to_"$day1"_t4"

####################################
# check existence of prerequisisites
####################################
if (! -e $day2.4dfp.img || ! -e $day2.4dfp.ifh) then
	echo $day2 not found
	exit -1
endif
if (! -d $day1path) then
	echo $day1path not a directory
	exit -1
endif
if (! -e $day1path/$day1.4dfp.img || ! -e $day1path/$day1.4dfp.ifh) then
	echo $day1path/$day1 not found
	exit -1
endif
if (! -e $day1path/$day1"_to_"$target"_t4") then
	echo $day1path/$day1"_to_"$target"_t4" not found
	exit -1
endif

##################################
# make day1 anat_ave tailored mask
##################################
pushd $day1path
echo "atlas representative target="$target
	if ($hasTarget) then
		msktgen_4dfp $day1 $targetpath -S$atlas
	else
		msktgen_4dfp $day1
	endif
	if ($status) exit $status
popd

####################
# initialize $t4file
####################
set oristr	= (T C S)
@ ori = `awk '/orientation/{print $NF - 1}' $day1path/$day1.4dfp.ifh`
t4_inv $RELEASE/$oristr[$ori]_t4 temp$$_t4
@ ori = `awk '/orientation/{print $NF - 1}' $day2.4dfp.ifh`
t4_mul $RELEASE/$oristr[$ori]_t4 temp$$_t4 $t4file
/bin/rm temp$$_t4

###############################################
# compute cross-day anat_ave to anat_ave t4file
###############################################
echo $program $argv[1-]	>! $log
date			>> $log
echo $rcsid		>> $log
@ k = 1
while ($k <= ${#modes})
echo	imgreg_4dfp $day1path/$day1 $day1path/$day1"_mskt" $day2 none $t4file $modes[$k] >> $log
	imgreg_4dfp $day1path/$day1 $day1path/$day1"_mskt" $day2 none $t4file $modes[$k] >> $log
	if ($status) exit $status
	@ k++
end

####################
# compose transforms
####################
set cur	= `date +"%m%d%y_%H%M"`
if (-e $day2"_to_"$target"_t4") /bin/mv			$day2"_to_"$target"_t4" $day2"_to_"$target"_t4_"$cur
t4_mul $t4file $day1path/$day1"_to_"$target"_t4"	$day2"_to_"$target"_t4"
if ($status) exit $status

#####################
# apply new transform
#####################
t4img_4dfp $t4file $day2 $day2"_on_"$day1 -O$day1path/$day1
if ($status) exit $status
ifh2hdr $day2"_on_"$day1 -r2000

exit
