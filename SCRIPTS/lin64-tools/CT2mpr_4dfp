#!/bin/csh -f
# $Header: /data/petsun4/data1/solaris/csh_scripts/RCS/CT2mpr_4dfp,v 1.5 2021/07/28 22:34:07 avi Exp $
# $Log: CT2mpr_4dfp,v $
# Revision 1.5  2021/07/28 22:34:07  avi
# slightly clarified usage
#
# Revision 1.4  2018/08/16 05:11:11  avi
# invoke with -f
#
# Revision 1.3  2016/02/11  22:45:40  avi
# optiion -m
#
# Revision 1.2  2010/08/16  01:24:57  avi
# correct bug in redo option code
#
# Revision 1.1  2010/07/30  23:06:58  avi
# Initial revision
#
set idstr = '$Id: CT2mpr_4dfp,v 1.5 2021/07/28 22:34:07 avi Exp $'
echo $idstr

set program = $0; set program = $program:t
if (${#argv} < 2) then
	echo "Usage:	"$program" <4dfp mprage> <4dfp CT> [options]"
	echo "e.g.:	"$program" PT34_mpr1 ../CT090202/OTSN80_CT -T/data/cninds01/data2/atlas/TRIO_Y_NDC"
	echo "	options"
	echo "	-T<target>	specify atlas target (<target> may include absolute path)"
	echo "	-m	run additional final registration using an internally computed MP-RAGE mask"
	echo "	setecho	set echo"
	echo "	debug	debug mode"
	echo "	redo	recompute (e.g., after manual t4file adjustment)"
	echo "N.B.:	"$program" assumes that <4dfp mprage> is in the current working directory"
	echo "	and that its atlas transform, e.g., PT34_mpr1_to_TRIO_Y_NDC_t4"
	echo "	exists and is in the current working directory"
	exit 1
endif

set oristr =	(T C S)
set mpr =	$argv[1]; if ($mpr:e == "img") set mpr = $mpr:r; if ($mpr:e == "4dfp") set mpr = $mpr:r; 
set CT =	$argv[2]; if ($CT:e  == "img") set CT  = $CT:r;  if ($CT:e  == "4dfp") set CT  = $CT:r;

set targetpath	= ""
@ usemask = 0
@ useT = 0
@ debug = 0
@ redo = 0
@ m = 3
while ($m <= ${#argv})
	switch ($argv[$m])
	case -m:
		@ usemask++;		breaksw;
	case redo:
		@ redo++;		breaksw;
	case setecho:
		set echo;		breaksw;
	case debug:
		@ debug++;		breaksw;
	case -T*:
		set targetpath   = `echo $argv[$m] | awk '{print substr($1,3)}'`
		if ($targetpath:e  == "img")	set targetpath = $targetpath:r	# trim off extensions
		if ($targetpath:e  == "4dfp")	set targetpath = $targetpath:r
		set target = $targetpath:t
		@ useT++
		breaksw;

	endsw
	@ m++
end

if (! -e $CT.4dfp.ifh || ! -e $CT.4dfp.img) then
	echo $program": "$CT not found
	exit -1
endif
if (! -e $mpr.4dfp.ifh || ! -e $mpr.4dfp.img) then
	echo $program": "$mpr not found
	exit -1
endif
if ($useT) then
	set mpratlt4 = $mpr"_to_"$target"_t4"
	if (! -e $mpratlt4) then
		echo $mpratlt4 not found
		exit -1
	endif
else
	set mpratlt4 = ($mpr"_to_711-2"[B-Z]_t4)
	if (${#mpratlt4} < 1) then
		echo $mpr atlas transform not found
		exit -1
	endif
	set target = `echo $mpratlt4[1] | awk '{l=index($1,"711-2"); printf("%s",substr($1,l,6));}'`
endif

set t4file = $CT:t"_to_"$mpr:t"_t4"
set log =    $CT:t"_to_"$mpr:t.log
if (! $redo) then
	@ ori = `awk '/orientation/{print $NF - 1}' $mpr.4dfp.ifh`
	t4_inv $RELEASE/$oristr[$ori]_t4 temp$$_t4
	@ ori = `awk '/orientation/{print $NF - 1}' $CT.4dfp.ifh`
	t4_mul $RELEASE/$oristr[$ori]_t4 temp$$_t4 $t4file
	/bin/rm temp$$_t4
	if (-e $log) /bin/rm $log
	touch $log
	@ k = 1
else
	@ k = 4
endif

echo $program $argv[1-]	>> $log
echo $idstr		>> $log
date			>> $log
echo "mpr="$mpr		>> $log
echo "CT="$CT		>> $log
echo "target="$target	>> $log
if ($useT) echo "targetpath="$targetpath >> $log

set modes = (0 0 0 0 0)
@ modes[1] = 4096 + 3
@ modes[2] = 4096 + 3
@ modes[3] = 3072 + 3
@ modes[4] = 2048 + 3
@ modes[5] = 2048 + 3 + 8192
while ($k <= ${#modes})
	echo	imgreg_4dfp $mpr none $CT none $t4file $modes[$k] >> $log
		imgreg_4dfp $mpr none $CT none $t4file $modes[$k] >> $log
	if ($status) exit $status
	@ k++
end

if ($usemask) then
	msktgen_4dfp $mpr 5 -T$targetpath
	if ($status) exit $status
echo	imgreg_4dfp $mpr ${mpr}_mskt $CT none $t4file $modes[5] >> $log
	imgreg_4dfp $mpr ${mpr}_mskt $CT none $t4file $modes[5] >> $log
	if ($status) exit $status
endif

t4img_4dfp $t4file $CT	$CT:t"_on_"$mpr:t -O$mpr
ifh2hdr -r4096		$CT:t"_on_"$mpr:t

t4_mul $t4file $mpratlt4[1] $CT:t"_to_"$target"_t4"
foreach O (111 222 333)
	t4img_4dfp $CT:t"_to_"$target"_t4" $CT	$CT:t"_on_"$target"_"$O -O$O
	ifh2hdr -r4096				$CT:t"_on_"$target"_"$O
end

exit
